{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProp","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","pushRightClick","event","preventDefault","pushLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,OAAS,EALX,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,gCAgBE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KAEJA,IAASD,EAASC,MAEpBL,QAAQO,MAAR,uBAA8BH,EAASC,KAAvC,eAAkDA,MArBxD,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,UA1B9B,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YA1C3C,GAA2BO,aCD3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAuBEC,eAAiB,SAACC,GAChBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,UAAU,KAzB9B,EA4BEM,cAAgB,WACd,EAAKvB,SAAS,CAAEiB,UAAU,KA7B9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,MAEHY,SAASC,iBAAiB,cAAe5B,KAAKuB,gBAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,iBAd5C,kCAiBE,WACEzB,OAAOW,cAAcZ,KAAKsB,SAC1BK,SAASE,oBAAoB,cAAe7B,KAAKuB,gBACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,iBApB/C,oBAgCE,WACE,MAAgC1B,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAtClC,GAAyBP,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.882af47f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProp: Readonly<Props>) {\n    const { name } = this.props;\n\n    if (name !== prevProp.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProp.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.pushRightClick);\n    document.addEventListener('click', this.pushLeftClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.pushRightClick);\n    document.removeEventListener('click', this.pushLeftClick);\n  }\n\n  pushRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  pushLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}